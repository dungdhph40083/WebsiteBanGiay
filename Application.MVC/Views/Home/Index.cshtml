@model StatisticsViewModel
@using System.Globalization
@{
    var chartData = new
    {
        SuccessOrders = Model.ThanhCong,
        FailedOrders = Model.ThatBai,
        ReturnedOrders = Model.Hoantra,
        SuccessAmount = Model.TotalAmountThanhCong,
        FailedAmount = Model.TotalAmountThatBai,
        ReturnedAmount = Model.TotalAmountHoantra
    };
}

<h1 class="text-center" style="font-weight: bold;">THỐNG KÊ TỔNG QUAN</h1>


<!-- Cần thêm link Font Awesome -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<div class="dashboard-ecommerce">
    <div class="container-fluid dashboard-content">


        <!-- Thống kê số liệu tổng quát -->
        <div class="row text-center">
            @foreach (var stat in new[] {
            new { Label = "Tổng sản phẩm", Value = Model.TotalProducts, Color = "primary", Icon = "fa-box" },
            new { Label = "Tổng danh mục", Value = Model.TotalCategories, Color = "secondary", Icon = "fa-list-alt" },
            new { Label = "Tổng tài khoản", Value = Model.TotalUsers, Color = "success", Icon = "fa-user" },
            new { Label = "Tài khoản bị cấm", Value = Model.BannedAccounts, Color = "danger", Icon = "fa-ban" },
            new { Label = "Tổng số voucher", Value = Model.TotalVouchers, Color = "warning", Icon = "fa-ticket-alt" },
            new { Label = "Tổng liên hệ hỗ trợ", Value = Model.TotalContacts, Color = "info", Icon = "fa-envelope" }
            })
            {
                <div class="col-xl-2 col-lg-4 col-md-4 col-sm-6 col-12 mb-4">
                    <div class="card shadow-lg border-3 border-top border-top-@stat.Color rounded-lg hover-shadow">
                        <div class="card-body">
                            <i class="fas @stat.Icon text-@stat.Color mb-3" style="font-size: 2.5rem;"></i>
                            <h5 class="text-muted mb-3">@stat.Label</h5>
                            <h1 class="mb-1 text-@stat.Color" style="font-size: 3.5rem; font-weight: 600;">@stat.Value</h1>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="row mb-4">
            <div class="col-12">
                <div class="card shadow-lg">
                    <div class="card-body">
                        <h5 class="card-title text-primary">Lọc theo ngày</h5>
                        <form method="get" action="@Url.Action("Index", "Home")">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="startDate" class="form-label">Ngày bắt đầu</label>
                                    <input type="datetime-local" step="1" class="form-control" id="startDate" name="startDate" value="@Model.StartDate.GetValueOrDefault().ToString("yyyy-MM-ddTHH:mm:ss")" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="endDate" class="form-label">Ngày kết thúc</label>
                                    <input type="datetime-local" step="1" class="form-control" id="endDate" name="endDate" value="@Model.EndDate.GetValueOrDefault().ToString("yyyy-MM-ddTHH:mm:ss")" />
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="fas fa-filter"></i> Lọc
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        @if (Model.StartDate != null && Model.EndDate != null)
        {
            <div class="row">
                <div class="col-lg-6 col-md-12 mb-4">
                    <div class="card shadow-lg">
                        <div class="card-body">
                            <h5 class="card-title text-primary">
                                <i class="fas fa-chart-bar"></i> Biểu đồ cột (Số tiền)
                            </h5>
                            <canvas id="orderBarChart" height="300"></canvas>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-md-12 mb-4">
                    <div class="card shadow-lg">
                        <div class="card-body">
                            <h5 class="card-title text-primary">
                                <i class="fas fa-chart-pie"></i> Biểu đồ hình tròn (Phân bổ đơn hàng)
                            </h5>
                            <canvas id="orderPieChart" height="300"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <p class="text-muted text-center mt-3">Vui lòng chọn ngày bắt đầu và ngày kết thúc để xem biểu đồ thống kê.</p>
        }
    </div>
</div>

<!-- Chart.js Script -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Bar Chart for Total Amount
    var ctxBar = document.getElementById('orderBarChart').getContext('2d');
    var orderBarChart = new Chart(ctxBar, {
        type: 'bar',
        data: {
            labels: ['Thành công', 'Thất bại', 'Hoàn trả'],
            datasets: [{
                label: 'Số tiền (VNĐ)',
                data: [
    @Model.TotalAmountThanhCong,
    @Model.TotalAmountThatBai,
    @Model.TotalAmountHoantra
                    ],
                backgroundColor: ['#28a745', '#dc3545', '#ffc107'],
                borderColor: ['#28a745', '#dc3545', '#ffc107'],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                tooltip: {
                    callbacks: {
                        label: function (tooltipItem) {
                            return tooltipItem.raw.toLocaleString('vi-VN') + ' VNĐ';
                        }
                    }
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function (value) {
                            return value.toLocaleString('vi-VN');
                        }
                    }
                }
            }
        }
    });

    // Pie Chart for Order Distribution
    var ctxPie = document.getElementById('orderPieChart').getContext('2d');
    var orderPieChart = new Chart(ctxPie, {
        type: 'pie',
        data: {
            labels: ['Thành công', 'Thất bại', 'Hoàn trả'],
            datasets: [{
                data: [
    @Model.ThanhCong,
    @Model.ThatBai,
    @Model.Hoantra
                    ],
                backgroundColor: ['#28a745', '#dc3545', '#ffc107'],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top'
                },
                tooltip: {
                    callbacks: {
                        label: function (tooltipItem) {
                            return tooltipItem.raw.toLocaleString('vi-VN') + ' đơn';
                        }
                    }
                }
            }
        }
    });
</script>

<style>
    .hover-shadow:hover {
        transform: scale(1.05);
        transition: transform 0.3s ease;
    }
</style>
