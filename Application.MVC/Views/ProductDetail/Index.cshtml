@model List<Application.Data.Models.ProductDetail>

@{
    ViewData["Title"] = "Sản phẩm chi tiết";
}

<!-- Link to Bootstrap CSS (Ensure you have the correct path or use CDN) -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />

<!-- Font Awesome CDN for icons -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />

<!-- Custom CSS for additional styling -->
<style>
    .table th, .table td {
        text-align: center;
        vertical-align: middle;
    }

    .img-thumbnail {
        width: 100px;
        height: 100px;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
    }

    .actions-link {
        text-decoration: none;
        color: #007bff;
        font-size: 16px;
    }

    .actions-link:hover {
        text-decoration: underline;
        color: #0056b3;
    }

    .btn-custom {
        border-radius: 20px;
        padding: 5px 15px;
        font-size: 16px;
    }

    .modal-content {
        padding: 20px;
    }

    .btn-edit {
        background-color: #ffc107;
        color: white;
    }

    .btn-details {
        background-color: #17a2b8;
        color: white;
    }

    .btn-delete {
        background-color: #dc3545;
        color: white;
    }

    .btn-edit:hover {
        background-color: #e0a800;
    }

    .btn-details:hover {
        background-color: #138496;
    }

    .btn-delete:hover {
        background-color: #c82333;
    }

    /* Tùy chỉnh nút dropdown */
    .custom-dropdown-btn {
        background-color: #007bff; /* Màu xanh đậm */
        color: white;
        border-radius: 5px;
    }

    .custom-dropdown-btn:hover {
        background-color: #0056b3; /* Xanh đậm hơn khi hover */
        color: white;
    }

    /* Tùy chỉnh dropdown items */
    .dropdown-item.text-warning:hover {
        background-color: #fff3cd; /* Vàng nhạt */
        color: #856404; /* Vàng đậm */
    }

    .dropdown-item.text-success:hover {
        background-color: #d4edda; /* Xanh lá nhạt */
        color: #155724; /* Xanh lá đậm */
    }

    .dropdown-item.text-danger:hover {
        background-color: #f8d7da; /* Đỏ nhạt */
        color: #721c24; /* Đỏ đậm */
    }
</style>

<h1 class="text-center">Sản phẩm chi tiết</h1>

<p>
    <a class="btn btn-primary btn-custom" asp-action="Create">
        <i class="fas fa-plus-circle"></i> Tạo mới
    </a>
</p>

@if (Model.Count() > 0)
{
    <table class="table table-striped table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th>#</th> <!-- Serial number header -->
                <th>Tên SP</th>
                <th>Ảnh SP</th>
                <th>Kích cỡ</th>
                <th>Màu</th>
                <th>Danh mục</th>
                <th>Chất liệu</th>
                <th>Số lượng còn lại</th>
                <th>Thời gian cập nhật</th>
                <th>Trạng thái</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Entry in Model.Select((value, index) => new { value, index }))
            {
                <tr>
                    <!-- Serial number with offset based on page number -->
                    <td>@(Entry.index + 1 + (ViewBag.CurrentPage - 1) * ViewBag.PageSize)</td>
                    <td>@Entry.value.Product?.Name</td>
                    <td>
                        @if (Entry.value.Product?.Image != null)
                        {
                            <img src="https://localhost:7187/Images/@(Entry.value.Product.Image.ImageFileName)" class="img-thumbnail" alt="Product Image" />
                        }
                        else
                        {
                            <span>Chưa có ảnh</span>
                        }
                    </td>
                    <td>@Entry.value.Size?.Name</td>
                    <td>@Entry.value.Color?.ColorName</td>
                    <td>@Entry.value.Category?.CategoryName</td>
                    <td>@Entry.value.Material</td>
                    <td>@Entry.value.Quantity.GetValueOrDefault().ToString("#,0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</td>
                    <td>@Entry.value.UpdatedAt?.ToLocalTime().ToString("dd/MM/yyyy | HH:mm")</td>
                    <td>
                        @if (Entry.value.Status == 1)
                        {
                            <span class="badge badge-success">Đang bán</span>
                        }
                        else
                        {
                            <span class="badge badge-danger">Dừng bán</span>
                        }
                    </td>

                    <td>
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle custom-dropdown-btn" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <a class="dropdown-item text-warning" asp-action="Edit" asp-route-ID="@Entry.value.ProductDetailID">
                                    <i class="fas fa-edit"></i> Sửa
                                </a>
                                <div class="dropdown-divider"></div> <!-- Vạch ngăn cách -->
                                <a class="dropdown-item text-success" asp-action="Details" asp-route-ID="@Entry.value.ProductDetailID">
                                    <i class="fas fa-info-circle"></i> Chi tiết
                                </a>
                                <div class="dropdown-divider"></div> <!-- Vạch ngăn cách -->
                                <!-- Đổi trạng thái -->
                                <a class="dropdown-item text-primary" href="#" onclick="toggleStatus('@Entry.value.ProductDetailID')">
                                    <i class="fas fa-toggle-on"></i> Đổi trạng thái
                                </a>

                                <div class="dropdown-divider"></div> <!-- Vạch ngăn cách -->
                                <button class="dropdown-item text-danger delete_trigger" type="button" data-id="@Entry.value.ProductDetailID" data-controller="ProductDetail" data-action="Delete" data-toggle="modal" data-target="#ModalDelete">
                                    <i class="fas fa-trash-alt"></i> Xóa
                                </button>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <div class="d-flex justify-content-center mt-3">
        <nav>
            <ul class="pagination">
                <!-- Previous Page -->
                @if (ViewBag.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize })">Trước</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">Trước</span>
                    </li>
                }

                <!-- Page Numbers -->
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    if (i == ViewBag.CurrentPage)
                    {
                        <li class="page-item active">
                            <span class="page-link">@i</span>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = ViewBag.PageSize })">@i</a>
                        </li>
                    }
                }

                <!-- Next Page -->
                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize })">Tiếp</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">Tiếp</span>
                    </li>
                }
            </ul>
        </nav>
    </div>
}
else
{
    <h1 class="text-center">Chưa có chi tiết sản phẩm nào.</h1>
    <p class="text-center">Bắt đầu tạo chi tiết sản phẩm bằng cách nhấn vào "<b>Tạo mới</b>"!</p>
}

<!-- Thêm thư viện SweetAlert -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.2/sweetalert.min.js"></script>
<!-- Thêm thư viện SweetAlert -->

<script>
    document.querySelectorAll('.delete_trigger').forEach(button => {
        button.addEventListener('click', function () {
            const productDetailId = this.getAttribute('data-id');
            const controller = this.getAttribute('data-controller');
            const action = this.getAttribute('data-action');
            const deleteUrl = `/${controller}/${action}/${productDetailId}`;

            // Hiển thị cảnh báo xác nhận xóa với SweetAlert
            swal({
                title: "Bạn có chắc chắn?",
                text: "Sau khi xóa, bạn sẽ không thể khôi phục mục này!",
                icon: "warning",
                buttons: ["Hủy", "Xóa"],
                dangerMode: true,
            }).then((willDelete) => {
                if (willDelete) {
                    // Gửi yêu cầu xóa
                    fetch(deleteUrl, {
                        method: 'DELETE'
                    })
                        .then(response => {
                            if (response.ok) {
                                // Thông báo thành công
                                swal({
                                    title: "Đã xóa!",
                                    text: "Chi tiết sản phẩm đã được xóa thành công.",
                                    icon: "success",
                                    timer: 2000,
                                    buttons: false,
                                }).then(() => {
                                    location.reload(); // Tải lại trang sau khi xóa
                                });
                            } else if (response.status === 409) { // Lỗi ràng buộc dữ liệu
                                swal({
                                    title: "Không thể xóa!",
                                    text: "Sản phẩm này có liên quan đến các dữ liệu khác trong hệ thống.",
                                    icon: "error",
                                });
                            } else {
                                // Xử lý lỗi khác (như 400, 500)
                                swal({
                                    title: "Lỗi!",
                                    text: "Không thể xóa. Vui lòng thử lại.",
                                    icon: "error",
                                });
                            }
                        })
                        .catch(error => {
                            console.error("Error:", error);

                            // Thông báo lỗi hệ thống
                            swal({
                                title: "Lỗi!",
                                text: "Đã xảy ra lỗi trong quá trình xóa.",
                                icon: "error",
                            });
                        });
                }
            });
        });
    });

</script>

<script>
    async function toggleStatus(productDetailId) {
        const url = `/ProductDetail/ToggleStatus/${productDetailId}`; // URL gọi API
        try {
            const response = await fetch(url, {
                method: 'PUT'
            });

            if (response.ok) {
                // Thông báo thành công với SweetAlert
                swal({
                    title: "Thành công!",
                    text: "Đổi trạng thái thành công!",
                    icon: "success",
                    timer: 2000,
                    buttons: false,
                }).then(() => {
                    // Tải lại trang sau khi thông báo hoàn tất
                    location.reload();
                });
            } else {
                // Thông báo lỗi với SweetAlert
                swal({
                    title: "Lỗi!",
                    text: "Không thể đổi trạng thái. Vui lòng thử lại.",
                    icon: "error",
                });
            }
        } catch (error) {
            console.error("Error:", error);

            // Thông báo lỗi khi xảy ra lỗi trong quá trình thực hiện
            swal({
                title: "Lỗi!",
                text: "Đã xảy ra lỗi khi đổi trạng thái.",
                icon: "error",
            });
        }
    }
</script>

