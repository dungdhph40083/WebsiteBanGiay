@model List<Application.Data.Models.ProductDetail>

@{
    ViewData["Title"] = "Sản phẩm chi tiết";
    int Index = 0;
}

<!-- Link to Bootstrap CSS (Ensure you have the correct path or use CDN) -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />

<!-- Font Awesome CDN for icons -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />

<!-- Custom CSS for additional styling -->
<style>
    .table thead th {
        text-align: center; /* Căn giữa */
        vertical-align: middle; /* Căn giữa theo chiều dọc */
        padding: 10px; /* Khoảng cách giữa văn bản và viền */
        font-weight: bold; /* Đậm chữ */
    }
    .table th, .table td {
        text-align: center;
        vertical-align: middle;
    }

    .img-thumbnail {
        width: 100px;
        height: 100px;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
    }

    .actions-link {
        text-decoration: none;
        color: #007bff;
        font-size: 16px;
    }

        .actions-link:hover {
            text-decoration: underline;
            color: #0056b3;
        }

    .btn-custom {
        border-radius: 20px;
        padding: 5px 15px;
        font-size: 16px;
    }

    .modal-content {
        padding: 20px;
    }

    .btn-edit {
        background-color: #ffc107;
        color: white;
    }

    .btn-details {
        background-color: #17a2b8;
        color: white;
    }

    .btn-delete {
        background-color: #dc3545;
        color: white;
    }

    .btn-edit:hover {
        background-color: #e0a800;
    }

    .btn-details:hover {
        background-color: #138496;
    }

    .btn-delete:hover {
        background-color: #c82333;
    }

    /* Tùy chỉnh nút dropdown */
    .custom-dropdown-btn {
        background-color: #007bff; /* Màu xanh đậm */
        color: white;
        border-radius: 5px;
    }

    .custom-dropdown-btn:hover {
            background-color: #0056b3; /* Xanh đậm hơn khi hover */
            color: white;
        }

    /* Tùy chỉnh dropdown items */
    .dropdown-item.text-warning:hover {
        background-color: #fff3cd; /* Vàng nhạt */
        color: #856404; /* Vàng đậm */
    }

    .dropdown-item.text-success:hover {
        background-color: #d4edda; /* Xanh lá nhạt */
        color: #155724; /* Xanh lá đậm */
    }

    .dropdown-item.text-danger:hover {
        background-color: #f8d7da; /* Đỏ nhạt */
        color: #721c24; /* Đỏ đậm */
    }
</style>
<style>
    /* Style cho viền và hiệu ứng */
    .form-check-inline {
        transition: all 0.3s ease-in-out;
    }

    .status-radio:checked + .form-check-label {
        font-weight: bold;
    }

        .status-radio:checked + .form-check-label.text-primary {
            color: #004085; /* Màu xanh đậm hơn khi chọn */
        }

        .status-radio:checked + .form-check-label.text-success {
            color: #155724; /* Màu xanh lá đậm hơn khi chọn */
        }

        .status-radio:checked + .form-check-label.text-danger {
            color: #721c24; /* Màu đỏ đậm hơn khi chọn */
        }

    /* Hiệu ứng hover */
    .form-check-inline:hover {
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        transform: scale(1.05);
    }
</style>

<h1 class="text-center">Sản phẩm chi tiết</h1>

<!-- Form tìm kiếm sản phẩm -->
<div class="d-flex justify-content-center my-3">
    <div class="input-group w-75">
        <input type="text" class="form-control" id="searchInput" placeholder="Tìm theo tên sản phẩm" value="@ViewBag.SearchTerm">
        <div class="input-group-append">
            <button class="btn btn-primary" id="searchBtn">
                <i class="fas fa-search"></i> Tìm kiếm
            </button>
        </div>
    </div>
</div>

<div class="d-flex justify-content-center my-3">
    <div class="form-check form-check-inline border border-primary rounded p-2 mx-1">
        <input class="form-check-input status-radio" type="radio" name="statusFilter" id="statusAll" value="All"
        @(ViewBag.CurrentStatus == "All" ? "checked" : "")>
        <label class="form-check-label text-primary" for="statusAll">Tất cả</label>
    </div>
    <div class="form-check form-check-inline border border-success rounded p-2 mx-1">
        <input class="form-check-input status-radio" type="radio" name="statusFilter" id="statusActive" value="Active"
        @(ViewBag.CurrentStatus == "Active" ? "checked" : "")>
        <label class="form-check-label text-success" for="statusActive">Đang bán</label>
    </div>
    <div class="form-check form-check-inline border border-danger rounded p-2 mx-1">
        <input class="form-check-input status-radio" type="radio" name="statusFilter" id="statusInactive" value="Inactive"
        @(ViewBag.CurrentStatus == "Inactive" ? "checked" : "")>
        <label class="form-check-label text-danger" for="statusInactive">Dừng bán</label>
    </div>
</div>

<p>
    <a class="btn btn-primary btn-custom" asp-action="Create">
        <i class="fas fa-plus-circle"></i> Tạo mới
    </a>
</p>

@if (Model.Count() > 0)
{
    <table class="table table-striped table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th class="text-center">#</th> <!-- Serial number header -->
                <th class="text-center">Tên sản phẩm</th>
                <th class="text-center">Ảnh SP</th>
                <th class="text-center">Danh mục</th>
                <th class="text-center">Chất liệu</th>
                <th class="text-center">Thời gian cập nhật</th>
                <th class="text-center">Trạng thái</th>
                <th class="text-center">Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Entry in Model)
            {
                Index++;
                <tr>
                    <td>@(Index + ((ViewBag.CurrentPage ?? 1) - 1) * (ViewBag.PageSize ?? 10))</td>
                    <td>@Entry.Product?.Name</td>
                    <td>
                        @if (Entry.Product?.Image != null)
                        {
                            <img src="https://localhost:7187/Images/@(Entry.Product.Image.ImageFileName)" class="img-thumbnail" alt="Product Image" />
                        }
                        else
                        {
                            <span>Chưa có ảnh</span>
                        }
                    </td>
                    <td>@Entry.Category?.CategoryName</td>
                    <td>@Entry.Material</td>
                    <td>@Entry.UpdatedAt?.ToLocalTime().ToString("dd/MM/yyyy | HH:mm")</td>
                    <td>
                        @if (Entry.Status == 1)
                        {
                            <span class="badge badge-success">Đang bán</span>
                        }
                        else
                        {
                            <span class="badge badge-danger">Dừng bán</span>
                        }
                    </td>
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle custom-dropdown-btn" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-ellipsis-v"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
                                <a class="dropdown-item text-warning" asp-action="Edit" asp-route-ID="@Entry.Product?.ProductID">
                                    <i class="fas fa-edit"></i> Sửa
                                </a>
 @*                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item text-success" asp-action="Details" asp-route-ID="@Entry.Product?.ProductID">
                                    <i class="fas fa-info-circle"></i> Chi tiết
                                </a> *@
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item text-primary" href="#" onclick="toggleStatus('@Entry.ProductID')">
                                    <i class="fas fa-toggle-on"></i> Đổi trạng thái
                                </a>
                                <div class="dropdown-divider"></div>
                                <button class="dropdown-item text-danger delete_trigger" type="button" data-id="@Entry.ProductID" data-controller="ProductDetail" data-action="TryDeleteWhole" data-toggle="modal" data-target="#ModalDelete">
                                    <i class="fas fa-trash-alt"></i> Xóa tất
                                </button>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <div class="d-flex justify-content-center mt-3">
        <nav>
            <ul class="pagination">
                @if (ViewBag.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize, status = ViewBag.CurrentStatus, searchTerm = ViewBag.SearchTerm })">Trước</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">Trước</span>
                    </li>
                }
                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                {
                    if (i == ViewBag.CurrentPage)
                    {
                        <li class="page-item active">
                            <span class="page-link">@i</span>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = ViewBag.PageSize, status = ViewBag.CurrentStatus, searchTerm = ViewBag.SearchTerm })">@i</a>
                        </li>
                    }
                }
                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize, status = ViewBag.CurrentStatus, searchTerm = ViewBag.SearchTerm })">Tiếp</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <span class="page-link">Tiếp</span>
                    </li>
                }
            </ul>
        </nav>
    </div>
}
else
{
    <h1 class="text-center">Chưa có sản phẩm chi tiết nào</h1>
}

<!-- JavaScript for handling search functionality -->
<script>
    if (false)
    {
        console.log("You have somehow did this. You must be bending reality.");
    }
    else
    {
    document.getElementById('searchBtn').addEventListener('click', function () {
        const searchTerm = document.getElementById('searchInput').value;
        const url = `/ProductDetail/Index?Page=1&PageSize=@ViewBag.PageSize&Status=@ViewBag.CurrentStatus&SearchQuery=${searchTerm}`;
        window.location.href = url;
    });
    // Tự động tìm kiếm khi người dùng nhấn Enter
    document.getElementById("searchInput").addEventListener("keypress", function (e) {
        if (e.key === 'Enter') {
            document.getElementById("searchBtn").click();
        }
    });

         document.querySelectorAll('input[name="statusFilter"]').forEach(radio => {
         radio.addEventListener('change', function () {
             const selectedStatus = this.value;
             const url = `/ProductDetail/Index?Page=1&PageSize=@ViewBag.PageSize&Status=${selectedStatus}`;
             window.location.href = url;
         });
     });

    async function toggleStatus(productDetailId) {
        const url = `/ProductDetail/ToggleStatus/${productDetailId}`;
        try {
            const response = await fetch(url, { method: 'PUT' });
            if (response.ok) {
                swal({
                    title: "Thành công!",
                    text: "Đổi trạng thái thành công!",
                    icon: "success",
                    timer: 2000,
                    buttons: false,
                }).then(() => location.reload());
            } else {
                swal({ title: "Lỗi!", text: "Không thể đổi trạng thái.", icon: "error" });
            }
        } catch {
            swal({ title: "Lỗi!", text: "Đã xảy ra lỗi khi đổi trạng thái.", icon: "error" });
        }
    }

    document.querySelectorAll('.delete_trigger').forEach(button => {
        button.addEventListener('click', async function () {
            const productDetailId = this.getAttribute('data-id');
            const controller = this.getAttribute('data-controller');
            const action = this.getAttribute('data-action');
            const deleteUrl = `/${controller}/${action}/${productDetailId}`;

            // Hiển thị cảnh báo xác nhận xóa với SweetAlert
            swal({
                title: "Bạn có chắc chắn?",
                text: "Sau khi xóa, bạn sẽ không thể khôi phục mục này!",
                icon: "warning",
                buttons: ["Hủy", "Xóa"],
                dangerMode: true,
            }).then(async (willDelete) => {
                if (willDelete) {
                    try {
                        const response = await fetch(deleteUrl, {
                            method: 'DELETE'
                        });

                        if (response.ok) {
                            // Thông báo thành công
                            swal({
                                title: "Đã xóa!",
                                text: "Chi tiết sản phẩm đã được xóa thành công.",
                                icon: "success",
                                timer: 100000,
                                buttons: false,
                            }).then(() => {
                                location.reload(); // Tải lại trang sau khi xóa
                            });
                        } else {
                            // Xử lý lỗi khác (như 400, 500)
                            swal({
                                title: "Lỗi!",
                                text: "Không thể xóa. Vui lòng thử lại.",
                                icon: "error",
                            });
                        }
                    } catch (error) {
                        console.error("Error:", error);

                        // Thông báo lỗi hệ thống
                         if (response.status === 409) { // Lỗi ràng buộc dữ liệu
                            swal({
                                title: "Không thể xóa!",
                                text: "Sản phẩm này có liên quan đến các dữ liệu khác trong hệ thống.<br>Tất cả các sản phẩm đó đã đặt về 0.",
                                icon: "error",
                            });
                        } else
                        {
                        swal({
                            title: "Lỗi!",
                            text: "Đã xảy ra lỗi trong quá trình xóa.",
                            icon: "error",
                        });
                        }
                    }
                }
            });
        });
    });
    }
</script>