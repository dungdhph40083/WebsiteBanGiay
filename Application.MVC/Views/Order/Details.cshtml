@using System.Text.RegularExpressions
@using Application.Data.Enums
@model Application.Data.Models.Order

@{
    ViewData["Title"] = "Thông tin đơn hàng";

    var Infos = ViewBag.AlwaysTired as Application.Data.Models.Order ?? new();
    var Items = ViewBag.Grrrrrrrrrr as List<Application.Data.Models.OrderDetail> ?? [];
}

<style>
    body {
        background-color: #f8f9fa;
        font-family: 'Arial', sans-serif;
    }

    h1 {
        // color: #007bff;
    }

    table {
        margin-top: 20px;
        border-collapse: separate;
        border-spacing: 0;
        overflow: hidden;
    }

        table th {
            background-color: #888888;
            color: #fff;
            text-align: center;
        }

        table td, table th {
            vertical-align: middle;
            text-align: center;
        }

        table img {
            border-radius: 8px;
        }

    dl {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    dt {
        font-weight: bold;
    }

    dd {
        margin-bottom: 15px;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }
</style>
<div class="container py-5">
    <h1 class="text-uppercase text-center mb-4"><b>Các mặt hàng đã mua</b></h1>
    <div class="row">
        <div class="col-md-10">
            <table class="table table-bordered table-striped table-hover">
                <thead>
                    <tr>
                        <th style="color: white;">Ảnh sản phẩm</th>
                        <th style="color: white;">Tên sản phẩm</th>
                        <th style="color: white;">Số lượng</th>
                        <th style="color: white;">Kích cỡ</th>
                        <th style="color: white;">Màu</th>
                        <th style="color: white;">Đơn giá</th>
                    </tr>

                </thead>
                <tbody>
                    @foreach (var Item in Items)
                    {
                        <tr>
                            <td>
                                @if (Item.ProductDetail?.Product?.Image != null)
                                {
                                    <img style="width: 100px; height: 100px" src="https://localhost:7187/Images/@(Item.ProductDetail?.Product?.Image?.ImageFileName)" class="img-thumbnail" alt="Ảnh hàng" />
                                }
                                else
                                {
                                    <span>Chưa có ảnh</span>
                                }
                            </td>
                            <td>@Item.ProductDetail?.Product?.Name</td>
                            <td>@Item.Quantity</td>
                            <td>@Item.ProductDetail?.Size?.Name</td>
                            <td>@Item.ProductDetail?.Color?.ColorName</td>
                            <td><b>@Item.SumTotalPrice.GetValueOrDefault().ToString("#,##0")</b></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="col-md-2">
            <dl>
                <dt>Tổng giá hàng</dt>
                <dd>@(Infos?.RawTotal.GetValueOrDefault().ToString("#,##0"))</dd>
                @if (Infos?.VoucherID != null)
                {
                    <dt>Giảm giá</dt>
                    <dd>
                        @if (Infos!.Voucher!.UseDiscountPrice)
                        {
                            <text>-@Infos?.Voucher.DiscountPrice.GetValueOrDefault().ToString("#,##0")</text>
                        }
                        else
                        {
                            <text>-@Infos?.Voucher.DiscountPercent.GetValueOrDefault().ToString("N0")%</text>
                        }
                    </dd>
                }
                <dt>Phí ship</dt>
                <dd>Miễn phí</dd>
                <dt>Tổng tiền</dt>
                <dd>@(Infos?.GrandTotal.GetValueOrDefault().ToString("#,##0"))</dd>
<dd>
    <a asp-action="Invoice" asp-route-ID="@Infos?.OrderID" class="btn btn-primary custom-btn">
        <i class="fa fa-print"></i> In hóa đơn
    </a>
</dd>


            </dl>
        </div>
    </div>

</div>

<hr />
<hr />
<h1 class="text-uppercase text-center mb-4"><b>Thông tin đơn hàng</b></h1>
<dl class="row px-xl-5">
    <dt class="col-md-6">Mã đơn hàng:</dt>
    <dd class="col-md-6">@Infos?.OrderNumber</dd>


    <dt class="col-md-6">Ngày đặt đơn :</dt>
    <dd class="col-md-6">@Infos?.OrderDate.GetValueOrDefault().ToLocalTime().ToString("d/M/yyyy H:mm:ss")</dd>
    <dt class="col-md-6">Tên khách hàng :</dt>
    <dd class="col-md-6">@Infos?.LastName @Infos?.FirstName</dd>
    <dt class="col-md-6">Email :</dt>
    <dd class="col-md-6">
        <p>
            @{
                if (Infos?.Email == null)
                {
                    <i>Không có địa chỉ Email</i>
                }
                else
                {
                    @Infos?.Email
                }
            }
        </p>
    </dd>
    <dt class="col-md-6">Số điện thoại :</dt>

    <dd class="col-md-6">@Infos?.PhoneNumber</dd>

    <dt class="col-md-6">Địa chỉ giao hàng :</dt>

    <dd class="col-md-6">@Infos?.ShippingAddress</dd>
    <dt class="col-md-6">Phương thức thanh toán :</dt>
    <dd class="col-md-6">@Infos?.PaymentMethod?.MethodName</dd>
    <dt class="col-md-6">Trạng thái đơn hàng: </dt>

    <dd class="col-md-6">
        @if (Infos != null)
        {
            @switch ((OrderStatus)Infos.Status)
            {
                case OrderStatus.Canceled:
                    <span class="badge badge-danger">Bị hủy</span>
                    break;
                case OrderStatus.Refunding:
                    <span class="badge badge-warning">Yêu cầu hoàn trả</span>
                    break;
                case OrderStatus.RefundProcessed:
                    <span class="badge badge-info">Chấp nhận hoàn trả</span>
                    break;
                case OrderStatus.RefundDelivered:
                    <span class="badge badge-primary">Đơn vị đang đến nhận hàng hoàn trả</span>
                    break;
                case OrderStatus.RefundReceived:
                    <span class="badge badge-info">Đơn vị đã nhận hàng trả</span>
                    break;
                case OrderStatus.Refunded:
                    <span class="badge badge-success">Đã hoàn trả</span>
                    break;
                case OrderStatus.Created:
                    <span class="badge badge-warning">Chờ xác nhận</span>
                    break;
                case OrderStatus.Processed:
                    <span class="badge badge-primary">Đã xác nhận đơn</span>
                    break;
                case OrderStatus.Delivered:
                    <span class="badge badge-info">Đang vận chuyển</span>
                    break;
                case OrderStatus.Arrived:
                    <span class="badge badge-success">Đã giao thành công</span>
                    break;
                case OrderStatus.Received:
                case OrderStatus.ReceivedAgain:
                    <span class="badge badge-success">Đã nhận hàng</span>
                    break;
                case OrderStatus.ReceivedCompleted:
                    <span class="badge badge-success">Đã nhận hàng thành công</span>
                    break;
                case OrderStatus.DeliveryIsDead:
                    <span class="badge badge-danger">Giao hàng thất bại</span>
                    break;
                case OrderStatus.DeliveryFailure:
                    <span class="badge badge-danger">Giao hàng chưa thành công</span>
                    break;
                case OrderStatus.ReceivedRefundFail:
                    <span class="badge badge-danger">Khách đã nhận hàng, hoàn trả thất bại</span>
                    break;
                default:
                    <span class="badge badge-secondary">N/A</span>
                    break;
            }

        }
    </dd>
    <dt class="col-md-6">Trạng thái thanh toán: </dt>
    <dd class="col-md-6">
        @(Infos.HasPaid
            ? Html.Raw("<span class='badge badge-success'>Đã thanh toán</span>")
            : Html.Raw("<span class='badge badge-warning'>Chưa thanh toán</span>"))
    </dd>

    <dt class="col-md-6">Thời gian nhận: </dt>
    <dd class="col-md-6">@(Infos?.AcceptEnd == null ? "N/A" : Infos?.AcceptEnd)</dd>

    @if (Infos?.Status == (byte)OrderStatus.Arrived)
    {
        <dt class="col-md-6">Thời gian chờ khách xác nhận: </dt>
        <dd class="col-md-6">
            @{
                var Span = (Infos?.AcceptEnd.GetValueOrDefault() ?? DateTime.MinValue) - DateTime.UtcNow;
                Console.WriteLine(Span.TotalSeconds);
                if (Span > TimeSpan.Zero)
                {
                    if (Span.TotalDays > 0)
                    {
                        <text>@((int)Span.TotalDays) ngày @((int)Span.TotalHours % 24) giờ</text>
                    }
                    else if (Span.TotalHours > 0)
                    {
                        <text>@((int)Span.TotalHours) giờ @((int)Span.TotalMinutes % 60) phút</text>
                    }
                    else if (Span.TotalMinutes > 0)
                    {
                        <text>@((int)Span.TotalMinutes) phút @((int)Span.TotalSeconds % 60) giây</text>
                    }
                    else
                    {
                        <text>@((int)Span.TotalSeconds) giây</text>
                    }
                }
                else
                {
                    <text>Đã nhận</text>
                }
            }
        </dd>
    }

    <dt class="col-md-6">Thời gian hoàn trả được: </dt>
    <dd class="col-md-6">@(Infos?.RefundEnd == null ? "N/A" : (DateTime.UtcNow > Infos?.RefundEnd ? "Không" : "Có"))</dd>
    @if (Infos?.Status == (byte)OrderStatus.Received || Infos?.Status == (byte)OrderStatus.ReceivedAgain)
    {
        <dt class="col-md-6">Thời gian còn lại</dt>
        <dd class="col-md-6">
            @{
                var Span = (Infos?.RefundEnd.GetValueOrDefault() ?? DateTime.MinValue) - DateTime.UtcNow;
                Console.WriteLine(Span.TotalSeconds);
                if (Span > TimeSpan.Zero)
                {
                    if (Span.TotalDays > 0)
                    {
                        <text>@((int)Span.TotalDays) ngày @((int)Span.TotalHours % 24) giờ</text>
                    }
                    else if (Span.TotalHours > 0)
                    {
                        <text>@((int)Span.TotalHours) giờ @((int)Span.TotalMinutes % 60) phút</text>
                    }
                    else if (Span.TotalMinutes > 0)
                    {
                        <text>@((int)Span.TotalMinutes) phút @((int)Span.TotalSeconds % 60) giây</text>
                    }
                    else
                    {
                        <text>@((int)Span.TotalSeconds) giây</text>
                    }
                }
                else
                {
                    <text>Hết hạn trả</text>
                }
            }
        </dd>
    }
</dl>

