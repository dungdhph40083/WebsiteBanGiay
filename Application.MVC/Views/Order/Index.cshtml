@model List<Application.Data.Models.Order>;
@using Application.Data.Enums;

@{
    ViewData["Title"] = "Danh sách đơn hàng";
    var Badge = ViewBag.BadgeData as Application.Data.Models.CategorizedOrdersCountModel ?? new();
    string? SortByParamValue = ViewData["FilterValue"] as string;
}
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />

<style>
    .table th, .table td {
        text-align: center;
        vertical-align: middle;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
    }

    .btn-custom {
        border-radius: 20px;
        padding: 5px 15px;
        font-size: 16px;
    }

    .custom-dropdown-btn {
        background-color: #007bff; 
        color: white;
        border-radius: 5px;
    }

        .custom-dropdown-btn:hover {
            background-color: #0056b3;
            color: white;
        }

    .dropdown-item.text-warning:hover {
        background-color: #fff3cd; 
        color: #856404;
    }

    .dropdown-item.text-success:hover {
        background-color: #d4edda; 
        color: #155724;
    }

    .dropdown-item.text-danger:hover {
        background-color: #f8d7da; 
        color: #721c24;
    }

    .table thead th {
        text-align: center; 
        vertical-align: middle; 
        padding: 10px; 
        font-weight: bold; 
    }


</style>

<h1 class="text-center">Danh sách đơn hàng</h1>
<div class="row mb-2">
    <div class="col-md-6 col-lg-4">
        <div class="dropdown">
            <button class="btn btn-secondary custom-dropdown-btn" type="button" data-toggle="dropdown" aria-expanded="false">
                Lọc trạng thái đơn
            </button>
            <div class="dropdown-menu rounded-3 border-1 text-center m-2">
                <a class="dropdown-item ml-1 mr-1 @(SortByParamValue == OrderFilters.ORDERS_PENDING ? "active" : "")" style="border-radius: 10px;" asp-route-Filter="@OrderFilters.ORDERS_PENDING">
                    Chờ xác nhận @if (Badge.PendingOrders > 0)
                    {
                        <span class="badge badge-warning">@Badge.PendingOrders</span>
                    }
                </a>
                <a class="dropdown-item ml-1 mr-1 @(SortByParamValue == OrderFilters.ORDERS_ONGOING ? "active" : "")" style="border-radius: 10px;" asp-route-Filter="@OrderFilters.ORDERS_ONGOING">
                    Đang giao hàng @if (Badge.OngoingOrders > 0)
                    {
                        <span class="badge badge-success">@Badge.OngoingOrders</span>
                    }
                </a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item ml-1 mr-1 @(SortByParamValue == OrderFilters.ORDERS_SUCCEEDED ? "active" : "")" style="border-radius: 10px;" asp-route-Filter="@OrderFilters.ORDERS_SUCCEEDED">
                    Thành công @if (Badge.SucceededOrders > 0)
                    {
                        <span class="badge badge-success">@Badge.SucceededOrders</span>
                    }
                </a>
                <a class="dropdown-item ml-1 mr-1 @(SortByParamValue == OrderFilters.ORDERS_FAILED ? "active" : "")" style="border-radius: 10px;" asp-route-Filter="@OrderFilters.ORDERS_FAILED">
                    Thất bại @if (Badge.FailedOrders > 0)
                    {
                        <span class="badge badge-danger">@Badge.FailedOrders</span>
                    }
                </a>
                <div class="dropdown-divider"></div>
                <a class="dropdown-item ml-1 mr-1 @(string.IsNullOrWhiteSpace(SortByParamValue) ? "active" : "")" style="border-radius: 10px;" asp-action="Index">Tất cả</a>
            </div>
        </div>
    </div>

    <div class="col-md-6 col-lg-4 text-right">
        <input type="text" id="SearchInput" class="form-control" placeholder="Tìm kiếm đơn hàng..." onkeyup="SearchOrders()">
    </div>

    <div class="col-lg-4 text-right mt-2 mt-lg-0">
        <h5 class="font-weight-bold">Tổng số đơn hàng: <span class="badge badge-info">@Model.Count</span></h5>
    </div>
</div>

@if (Model.Count() != 0)
{
    <table class="table table-striped table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th class="text-center">Mã đơn hàng</th>
                <th class="text-center">Tên tài khoản</th>
                <th class="text-center">Ngày đặt</th>
                <th class="text-center">Phương thức thanh toán</th>
                <th class="text-center">Tổng tiền đơn</th>
                <th class="text-center">Trạng thái đơn</th>
                <th class="text-center">Trạng thái thanh toán</th>
                <th class="text-center">Thao tác đơn hàng</th>
            </tr>
        </thead>

        <tbody id="OrdersTableBody">
            @foreach (var Entry in Model)
            {
                <tr>
                    <td>@Entry.OrderNumber</td>
                    <td>@Entry.User?.Username</td>
                    <td>@Entry.OrderDate.GetValueOrDefault().ToLocalTime().ToString("d/M/yyyy H:mm:ss")</td>
                    <td>@Entry.PaymentMethod?.MethodName</td>
                    <td>@Entry.GrandTotal.GetValueOrDefault().ToString("#,##0")</td>
                    <td>
                        @switch ((OrderStatus)Entry.Status)
                        {
                            case OrderStatus.Canceled:
                                <p style="color: maroon">Đã bị hủy</p>
                                break;
                            case OrderStatus.Refunding:
                                <p style="color: #ff5555">Yêu cầu hoàn trả</p>
                                break;
                            case OrderStatus.RefundProcessed:
                                <p style="color: darkorchid">Đã chấp nhận hoàn trả</p>
                                break;
                            case OrderStatus.RefundDelivered:
                                <p style="color: coral">Đang tiến hành hoàn trả</p>
                                break;
                            case OrderStatus.RefundReceived:
                                <p style="color: lightsalmon">Đã lấy hàng trả & đang chuyển về</p>
                                break;
                            case OrderStatus.Refunded:
                                <p style="color: red">Đã hoàn trả</p>
                                break;
                            case OrderStatus.Created:
                            <p style="color: darkgoldenrod">Chờ xác nhận</p>
                                break;
                            case OrderStatus.Processed:
                            <p style="color: blue">Đã xác nhận đơn</p>
                                break;
                            case OrderStatus.Delivered:
                            <p style="color: teal">Đã giao đơn cho đơn vị vận chuyển</p>
                                break;
                            case OrderStatus.Arrived:
                            <p style="color: seagreen">Đã giao thành công</p>
                                break;
                            case OrderStatus.Received:
                            case OrderStatus.ReceivedAgain:
                            <p style="color: green">Khách đã nhận hàng</p>
                                break;
                            case OrderStatus.ReceivedCompleted:
                            <p style="color: green">Khách đã nhận hàng (ko hoàn trả nữa)</p>
                                break;
                            case OrderStatus.ReceivedRefundFail:
                                <p style="color: red">Hoàn trả thất bại</p>
                                break;
                            case OrderStatus.DeliveryFailure:
                                <p style="color: indianred">Giao hàng không thành công</p>
                                break;
                            case OrderStatus.DeliveryIsDead:
                                <p style="color: red">Giao hàng thất bại</p>
                                break;
                            default:
                            <p style="color: black">N/A</p>
                                break;
                        }
                    </td>
                    <td>
                        @if (Entry.HasPaid)
                        {
                            <text>Đã thanh toán</text>
                        }
                        else
                        {
                            <text>Chưa thanh toán</text>
                        }
                    </td>
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle custom-dropdown-btn" type="button" data-toggle="dropdown" aria-expanded="false" aria-haspopup="true" aria-expanded="false">
                                <i class="fa-solid fa-pen-to-square"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-right rounded-3 border-1 text-center m-2" style="width:200px">
                                <a asp-action="Details" asp-route-ID="@Entry.OrderID" class="btn btn-secondary">Chi tiết đơn</a>
                                <hr />
                        @switch ((OrderStatus)Entry.Status)
                        {

                            case OrderStatus.Created:
                            default:
                                {
                                        <a class="btn btn-warning" 
                                        asp-action="UpdateOrderStatus" 
                                        asp-route-ID="@Entry.OrderID" 
                                        asp-route-StatusCode="@((int)(OrderStatus.Processed))">
                                        Xác nhận đơn</a><br />

                                        <a class="btn btn-danger mt-1" 
                                        asp-action="UpdateOrderStatus" 
                                        asp-route-ID="@Entry.OrderID" 
                                        asp-route-StatusCode="@((int)(OrderStatus.Canceled))">
                                        Hủy đơn</a>
                                break;
                                }
                            case OrderStatus.Processed:
                                {
                                        <a class="btn btn-warning" 
                                        asp-action="UpdateOrderStatus" 
                                        asp-route-ID="@Entry.OrderID" 
                                        asp-route-StatusCode="@((int)(OrderStatus.Delivered))">
                                        Giao đơn</a>
                                break;
                                }
                            case OrderStatus.Delivered:
                                {
                                    <a class="btn btn-warning"
                                        asp-action="UpdateOrderStatus"
                                        asp-route-ID="@Entry.OrderID"
                                        asp-route-StatusCode="@((int)(OrderStatus.Arrived))">
                                        Đã giao được hàng
                                    </a>

                                    <br />

                                    @if (Entry.AttemptsLeft > 0)
                                    {
                                        <a class="btn btn-danger mt-1"
                                            asp-action="UpdateOrderStatus"
                                            asp-route-ID="@Entry.OrderID"
                                            asp-route-StatusCode="@((int)(OrderStatus.DeliveryFailure))">
                                            Chưa giao được hàng
                                        </a>
                                        <hr />
                                        <a class="btn btn-danger mt-1"
                                            asp-action="UpdateOrderStatus"
                                            asp-route-ID="@Entry.OrderID"
                                            asp-route-StatusCode="@((int)(OrderStatus.DeliveryIsDead))">
                                            Giao hàng thất bại
                                        </a>
                                    }
                                    else
                                    {
                                        <hr />
                                        <a class="btn btn-danger mt-1"
                                            asp-action="UpdateOrderStatus"
                                            asp-route-ID="@Entry.OrderID"
                                            asp-route-StatusCode="@((int)(OrderStatus.DeliveryFailure))">
                                            Giao hàng thất bại
                                        </a>
                                    }
                                    break;
                                }
                            case OrderStatus.Arrived:
                                {
                                        <h5>Đơn hàng đã giao thành công.</h5>
                                        <p>Hiện đang chờ khách hàng xác nhận hàng...</p>
                                break;
                                }
                            case OrderStatus.Refunding:
                            {
                                    <a class="btn btn-warning"
                                        asp-action="UpdateOrderStatus"
                                        asp-route-ID="@Entry.OrderID"
                                        asp-route-StatusCode="@((int)(OrderStatus.RefundProcessed))">
                                        Đồng ý
                                    </a><br />

                                    <a class="btn btn-danger mt-1"
                                        asp-action="UpdateOrderStatus"
                                        asp-route-ID="@Entry.OrderID"
                                        asp-route-StatusCode="@((int)(OrderStatus.ReceivedCompleted))">
                                        Từ chối
                                    </a>
                                break;
                            }
                            case OrderStatus.RefundProcessed:
                                <a class="btn btn-warning"
                                    asp-action="UpdateOrderStatus"
                                    asp-route-ID="@Entry.OrderID"
                                    asp-route-StatusCode="@((int)(OrderStatus.RefundDelivered))">
                                    Giao đơn đổi trả
                                </a>
                            break;
                            case OrderStatus.RefundDelivered:
                                <a class="btn btn-warning"
                                    asp-action="UpdateOrderStatus"
                                    asp-route-ID="@Entry.OrderID"
                                    asp-route-StatusCode="@((int)(OrderStatus.RefundReceived))">
                                    Đã nhận lại hàng
                                </a>
                                <br />
                                <a class="btn btn-danger mt-1"
                                    asp-action="UpdateOrderStatus"
                                    asp-route-ID="@Entry.OrderID"
                                    asp-route-StatusCode="@((int)(OrderStatus.ReceivedRefundFail))">
                                    Hoàn trả thất bại
                                </a>
                                break;
                                case OrderStatus.RefundReceived:
                                    <a class="btn btn-warning"
                                        asp-action="UpdateOrderStatus"
                                        asp-route-ID="@Entry.OrderID"
                                        asp-route-StatusCode="@((int)(OrderStatus.Refunded))">
                                        Xác nhận hoàn trả
                                    </a>
                                break;
                            case OrderStatus.ReceivedCompleted:
                                {
                                        <h5>Đơn hàng đã bị hủy trả hàng.</h5>
                                        <p>Để khôi phục lại đơn hàng về trạng thái ban đầu, nhấn nút này.</p><hr />
                                            <a class="btn btn-warning"
                                               asp-action="UpdateOrderStatus"
                                               asp-route-ID="@Entry.OrderID"
                                               asp-route-StatusCode="@((int)(OrderStatus.Received))">
                                                Đồng ý
                                            </a>
                                    break;
                                }
                            case OrderStatus.Canceled:
                                {
                                        <h5>Đơn hàng đã bị hủy.</h5>
                                        <p>Đơn hàng đã bị hủy và không còn khả dụng nữa.</p>
                                    break;
                                }
                            case OrderStatus.Refunded:
                                {
                                        <h5>Đơn hàng đã hoàn trả.</h5>
                                        <p>Đơn hàng đã được hoàn trả và không còn khả dụng nữa.</p>
                                    break;
                                }
                            case OrderStatus.Received:
                            case OrderStatus.ReceivedAgain:
                                {
                                    <h5>Đơn hàng đã hoàn thành.</h5>
                                    <p>Đơn hàng đã hoàn thành và không còn khả dụng nữa.</p>
                                    break;
                                }
                            case OrderStatus.ReceivedRefundFail:
                                {
                                    <h5>Đơn hàng hoàn trả thất bại.</h5>
                                    <p>Đơn hàng hoàn trả thất bại và không còn khả dụng nữa.</p>
                                    break;
                                }
                            case OrderStatus.DeliveryFailure:
                                        <a class="btn btn-warning"
                                           asp-action="UpdateOrderStatus"
                                           asp-route-ID="@Entry.OrderID"
                                           asp-route-StatusCode="@((int)(OrderStatus.Delivered))">
                                            Thử lại
                                        </a>
                                break;
                            case OrderStatus.DeliveryIsDead:
                                <h5>Đơn hàng đã thất bại.</h5>
                                <p>Đơn hàng đã thất bại do giao hàng không thành công quá nhiều lần.</p>
                                break;
                            }
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="6"></td>
            </tr>
        </tfoot>
    </table>
}
else
{
    @if (SortByParamValue == null)
    {
        <h1 class="text-center">Chưa có đơn hàng.</h1>
    }
    else
    {
        <h1 class="text-center">Không thấy đơn hàng nào.</h1>
    }
}

<script>
    /*
     *  thanks for the free javascript search snippet
     *  __  __   ____     ____   _   __   __ __    __
     *  \ \/ /  / __ \   /  _/  / | / /  / //_/   / /
     *   \  /  / / / /   / /   /  |/ /  / ,<     / / 
     *   / /  / /_/ /  _/ /   / /|  /  / /| |   /_/  
     *  /_/   \____/  /___/  /_/ |_/  /_/ |_|  (_)   
     *                                               
     */


    function SearchOrders() {
        var input = document.getElementById('SearchInput');
        var filter = input.value.toLowerCase();
        var table = document.getElementById('OrdersTableBody');
        var rows = table.getElementsByTagName('tr');

        for (var i = 0; i < rows.length; i++) {
            var cells = rows[i].getElementsByTagName('td');
            var orderName = cells[0].textContent || cells[0].innerText; // Cột mã đơn là cột 1 (index 0)
            
            // Kiểm tra xem tên sản phẩm có chứa từ khóa tìm kiếm hay không
            if (orderName.toLowerCase().indexOf(filter) > -1) {
                rows[i].style.display = ""; // Hiển thị nếu khớp
            } else {
                rows[i].style.display = "none"; // Ẩn nếu không khớp
            }
        }
    }
</script>