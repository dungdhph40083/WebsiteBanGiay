@using Application.Data.Enums
@model Application.Data.DTOs.VoucherDTO;

@{
    ViewData["Title"] = "Tạo Voucher";
}

<h1 class="text-center mt-4 text-primary">Tạo Voucher mới</h1>
<hr class="border-primary" />

<form asp-action="Create" method="post" class="shadow-lg p-4 rounded-3 bg-white">
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

    <div class="row g-3">
        <div class="col-md-4">
            <label asp-for="VoucherCode" class="form-label fw-semibold text-muted">Mã Voucher</label>
            <input asp-for="VoucherCode" class="form-control shadow-sm font-monospace-cascadia" required aria-label="Input voucher code to use" />
            <span asp-validation-for="VoucherCode" class="text-danger"></span>

        </div>
        <div class="col-md-4">
            <label asp-for="UsesLeft" class="form-label fw-semibold text-muted">Số lượng</label>
            <input asp-for="UsesLeft" class="form-control shadow-sm" type="number" placeholder="0" step="1" min="-1" max="10000000" aria-label="Input how many uses this voucher can be used." />
            <span asp-validation-for="UsesLeft" class="text-danger"></span>

        </div>
        <div class="col-md-4">
            <label asp-for="RequiredGrandTotal" class="form-label fw-semibold text-muted">Yêu cầu tổng giá tối thiểu</label>
            <input asp-for="RequiredGrandTotal" class="form-control shadow-sm" type="number" placeholder="0" min="0" max="@(1e15)" aria-label="" />
            <span asp-validation-for="RequiredGrandTotal" class="text-danger"></span>

        </div>
    </div>

    <div class="row g-3 mt-3">
        <div class="col-md-4">
            <label asp-for="UseDiscountPrice" class="form-label fw-semibold text-muted">Giảm giá theo</label><br />
            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio" onchange="Toggle()" id="RadioPercent" value="False" asp-for="UseDiscountPrice" class="custom-control-input" checked>
                <label class="custom-control-label" for="RadioPercent">Phần trăm đơn</label>
            </div>
            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio" onchange="Toggle()" id="RadioNumber" value="True" asp-for="UseDiscountPrice" class="custom-control-input">
                <label class="custom-control-label" for="RadioNumber">Số tiền nhất định</label>
            </div>
        </div>
        <div class="col-md-8" id="PercentInput">
            <label asp-for="DiscountPercent" class="form-label fw-semibold text-muted">Giảm % giá</label>
            <input asp-for="DiscountPercent" class="form-control shadow-sm" type="number" placeholder="0" step="0.01" min="0" max="100" aria-label="" />
            <span asp-validation-for="DiscountPercent" class="text-danger"></span>

        </div>
        <div class="col-md-8" id="NumberInput" hidden>
            <label asp-for="DiscountPrice" class="form-label fw-semibold text-muted">Giảm giá tiền</label>
            <input asp-for="DiscountPrice" class="form-control shadow-sm" type="number" placeholder="0" min="0" max="@(1e15)" aria-label="" />
            <span asp-validation-for="DiscountPrice" class="text-danger"></span>

        </div>
    </div>

    <div class="row g-3 mt-3">
        <div class="col-md-6">
            <label asp-for="StartingAt" class="form-label fw-semibold text-muted">Bắt đầu vào</label>
            <input asp-for="StartingAt" id="StartInput" onchange="Validate()" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")" class="form-control shadow-sm" type="datetime-local" step="1" required aria-label="Starting date of voucher" />
        </div>
        <div class="col-md-6">
            <label asp-for="EndingAt" class="form-label fw-semibold text-muted">Kết thúc vào</label>
            <input asp-for="EndingAt" id="EndInput" onchange="Validate()" value="@DateTime.Now.AddDays(7).ToString("yyyy-MM-ddTHH:mm:ss")" class="form-control shadow-sm" type="datetime-local" step="1" required aria-label="Ending date of voucher" />
        </div>
    </div>

    <div class="row g-3 mt-3">
        <div class="col-md-12">
            <label class="form-label fw-semibold text-muted" asp-for="Status">Trạng thái</label><br />
            <div class="custom-control custom-radio custom-control-inline col-5 align-right">
                <input type="radio" id="RadioPublic" value="1" asp-for="Status" class="custom-control-input" checked>
                <label class="custom-control-label" for="RadioPublic">Công khai</label>
            </div>
            <div class="custom-control custom-radio custom-control-inline col-5 align-middle">
                <input type="radio" id="RadioPrivate" value="101" asp-for="Status" class="custom-control-input">
                <label class="custom-control-label" for="RadioPrivate">Riêng tư</label>
            </div>
        </div>
    </div>

    <div class="row g-3 mt-3">
        <div class="col-md-12">
            <label asp-for="Description" class="form-label fw-semibold text-muted">Mô tả</label>
            <textarea asp-for="Description" class="form-control shadow-sm" placeholder="Voucher giảm giá..." aria-label="Enter voucher description"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>

        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center mt-4">
        <button type="submit" class="btn btn-primary px-5 py-2 shadow-sm">
            <i class="bi bi-save"></i> Thêm
        </button>
        <a asp-action="Index" class="btn btn-outline-secondary px-5 py-2 shadow-sm">
            <i class="bi bi-arrow-left"></i> Quay lại
        </a>
    </div>
</form>

<style>
    form {
        animation: slideInFromTop 0.8s ease-in-out;
        background-color: #f9f9f9;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }

    .btn-primary {
        background-color: #0d6efd;
        border-color: #0d6efd;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #004bb5;
            transform: translateY(-2px);
        }

    input.form-control, textarea.form-control, select.form-control {
        border-radius: 0.375rem;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease-in-out;
    }

        input.form-control:focus, textarea.form-control:focus, select.form-control:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 8px rgba(13, 110, 253, 0.5);
        }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    function Validate() {
    const now = new Date(); 
    now.setMinutes(now.getMinutes() + 1); 


    const nowLocal = formatDateTimeLocal(now);

    const startInput = document.getElementById('StartInput');
    const endInput = document.getElementById('EndInput');

    // Kiểm tra ngày bắt đầu
    if (startInput.value < nowLocal) {
        alert("Ngày bắt đầu không được trước thời gian hiện tại. Sẽ tự động điều chỉnh.");
        startInput.value = nowLocal; 
    }

    // Lấy giá trị ngày bắt đầu sau khi kiểm tra và tạo ngày kết thúc mặc định (sau 7 ngày)
    const startDate = new Date(startInput.value);
    const defaultEndDate = new Date(startDate);
    defaultEndDate.setDate(defaultEndDate.getDate() + 7); // Thêm 7 ngày
    const defaultEndLocal = formatDateTimeLocal(defaultEndDate);

    // Kiểm tra ngày kết thúc
    if (endInput.value < nowLocal || endInput.value < startInput.value) {
        alert("Ngày kết thúc không hợp lệ. Sẽ tự động đặt sau 7 ngày của ngày bắt đầu.");
        endInput.value = defaultEndLocal; // Đặt ngày kết thúc sau 7 ngày của ngày bắt đầu
    }
    if (endInput.value < startInput.value) {
        alert("Ngày kết thúc không được trước ngày bắt đầu.");
        endInput.value = startInput.value;
    }
}


function formatDateTimeLocal(date) {
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0'); 
    const day = String(date.getDate()).padStart(2, '0');
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');
    return `${year}-${month}-${day}T${hours}:${minutes}`;
}


    function Toggle()
    {
        if (document.getElementById('RadioPercent').checked == true)
        {
            document.getElementById('PercentInput').removeAttribute('hidden');
            document.getElementById('NumberInput').setAttribute('hidden', '');
        }
        if (document.getElementById('RadioPercent').checked == false)
        {
            document.getElementById('PercentInput').setAttribute('hidden', '');
            document.getElementById('NumberInput').removeAttribute('hidden');
        }
    }
</script>

