@using Application.Data.Enums
@model IEnumerable<Application.Data.Models.Voucher>;

@{
    ViewData["Title"] = "Danh sách Voucher";
    string? SortByTime = ViewData["FilterValueByTime"] as string;
    string? SortByLook = ViewData["FilterValueByLook"] as string;
}

<h1 class ="text-center">Danh sách Voucher</h1>
<p></p>
<!-- Link to Bootstrap CSS (Ensure you have the correct path or use CDN) -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />
<style>
    .table th, .table td {
        text-align: center;
        vertical-align: middle;
    }

    .table-hover tbody tr:hover {
        background-color: #f1f1f1;
    }

    .btn-custom {
        border-radius: 20px;
        padding: 5px 15px;
        font-size: 16px;
    }

    .custom-dropdown-btn {
        background-color: #007bff; /* Màu xanh đậm */
        color: white;
        border-radius: 5px;
    }

        .custom-dropdown-btn:hover {
            background-color: #0056b3;
            color: white;
        }

    .dropdown-item.text-warning:hover {
        background-color: #fff3cd; /* Vàng nhạt */
        color: #856404;
    }

    .dropdown-item.text-success:hover {
        background-color: #d4edda; /* Xanh lá nhạt */
        color: #155724;
    }

    .dropdown-item.text-danger:hover {
        background-color: #f8d7da; /* Đỏ nhạt */
        color: #721c24;
    }

    .table thead th {
        text-align: center; /* Căn giữa */
        vertical-align: middle; /* Căn giữa theo chiều dọc */
        padding: 10px; /* Khoảng cách giữa văn bản và viền */
        font-weight: bold; /* Đậm chữ */
    }
</style>

<div class="row mb-2">
    <div class="col-7">
        <div class="alert alert-light rounded-5 text-center">
            <a asp-route-SortByLook="@SortByLook" asp-route-SortByTime="@(null)" class="btn @(string.IsNullOrWhiteSpace(SortByTime) ? "btn-primary text-light" : "btn-outline-primary")">Tất cả</a>
            <a asp-route-SortByLook="@SortByLook" asp-route-SortByTime="@VoucherFilters.VOUCHER_COMING_SOON" class="btn @(SortByTime == VoucherFilters.VOUCHER_COMING_SOON ? "btn-warning text-light" : "btn-outline-warning")">Sắp diễn ra</a>
            <a asp-route-SortByLook="@SortByLook" asp-route-SortByTime="@VoucherFilters.VOUCHER_ONGOING" class="btn @(SortByTime == VoucherFilters.VOUCHER_ONGOING ? "btn-success text-light" : "btn-outline-success")">Đang diễn ra</a>
            <a asp-route-SortByLook="@SortByLook" asp-route-SortByTime="@VoucherFilters.VOUCHER_DIED" class="btn @(SortByTime == VoucherFilters.VOUCHER_DIED ? "btn-danger text-light" : "btn-outline-danger ")">Đã kết thúc</a>
        </div>
    </div>
    <div class="col-5">
        <div class="alert alert-light rounded-5 text-center">
            <a asp-route-SortByTime="@SortByTime" asp-route-SortByLook="@(null)" class="btn @(string.IsNullOrWhiteSpace(SortByLook) ? "btn-primary text-light" : "btn-outline-primary")">Tất cả</a>
            <a asp-route-SortByTime="@SortByTime" asp-route-SortByLook="@VoucherFilters.VOUCHER_PUBLIC" class="btn @(SortByLook == VoucherFilters.VOUCHER_PUBLIC ? "btn-success text-light" : "btn-outline-success")">Công khai</a>
            <a asp-route-SortByTime="@SortByTime" asp-route-SortByLook="@VoucherFilters.VOUCHER_PRIVATE" class="btn @(SortByLook == VoucherFilters.VOUCHER_PRIVATE ? "btn-danger text-light" : "btn-outline-danger ")">Riêng tư</a>
        </div>
    </div>
</div>


<div class="row align-items-center mb-2">
    <!-- Nút tạo mới -->
    <div class="col-md-6 col-lg-4 ">
        <a type="button" class="btn btn-primary btn-custom" asp-action="Create">Tạo Voucher</a>
    </div>
    <!-- Tìm kiếm tài khoản -->
    <div class="col-lg-4 text-md-right mt-2 mt-lg-0">
        <input type="text" id="SearchInput" class="form-control text-monospace-cascadia" placeholder="Tìm kiếm Voucher... (nhập mã Voucher)" onkeyup="SearchVouchers()">
    </div>

    <!-- Tổng số tài khoản -->
    <div class="col-md-6 col-lg-4 text-md-right mt-2 mt-md-0">
        <h5 class="font-weight-bold mb-0">Tổng số voucher: <span class="badge badge-info">@Model.Count()</span></h5>
    </div>


</div>
@if (Model.Count() != 0)
{
    <table class="table table-striped table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th class="text-center">Mã Voucher</th>
                <th class="text-center">Giảm giá</th>
                <th class="text-center">Còn lại</th>
                <th class="text-center">Loại Voucher</th>
                <th class="text-center">Thời điểm tạo</th>
                <th class="text-center">Bắt đầu</th>
                <th class="text-center">Kết thúc</th>
                <th class="text-center">Trạng thái</th>
                <th class="text-center">Thao tác</th>
            </tr>
        </thead>
        <tbody id="VouchersTableBody">
            @foreach (var Entry in Model)
            {
                <tr>
                    <td><i class="font-monospace-cascadia">@Entry.VoucherCode</i></td>
                    <td>
                        @if (Entry.UseDiscountPrice)
                        {
                            @(Entry.DiscountPrice <= 0 ? "Không!" : $"{Entry.DiscountPrice.GetValueOrDefault().ToString("#,##0")}")
                        }
                        else
                        {
                            @(Entry.DiscountPercent <= 0 ? "Không!" : $"{Entry.DiscountPercent.GetValueOrDefault().ToString("N0")}%")
                        }
                    </td>
                    <td>@(Entry.UsesLeft.GetValueOrDefault().ToString("#,##0"))</td>
                    <td>
                        @if (Entry.Status.GetValueOrDefault() < 100)
                        {
                            <span class="badge badge-success">Công khai</span>
                        }
                        else
                        {
                            <span class="badge badge-danger">Riêng tư</span>
                        }
                    </td>
                    <td>@(Entry.CreatedAt.GetValueOrDefault().ToLocalTime().ToString("H:mm:ss d/M/yyyy"))</td>
                    <td>@(Entry.StartingAt.GetValueOrDefault().ToLocalTime().ToString("H:mm:ss d/M/yyyy"))</td>
                    <td>
                        @(Entry.EndingAt.GetValueOrDefault().ToLocalTime().ToString("H:mm:ss d/M/yyyy"))<br />
                    </td>
                    <td>
                        @if (Entry.Status == (byte)VoucherStatus.Active || Entry.Status == (byte)VoucherStatus.ActivePrivate)
                        {
                            @if (DateTime.UtcNow > Entry.EndingAt.GetValueOrDefault())
                            {
                                <span class="badge badge-danger">Đã hết hạn</span>
                            }
                            else if (Entry.StartingAt.GetValueOrDefault() <= DateTime.UtcNow && DateTime.UtcNow <= Entry.EndingAt.GetValueOrDefault())
                            {
                                <span class="badge badge-success">Đang diễn ra</span>
                            }
                            else if (DateTime.UtcNow < Entry.StartingAt.GetValueOrDefault())
                            {
                                <span class="badge badge-warning">Sắp diễn ra</span>
                            }
                            else
                            {
                                <p>N/A</p>
                            }
                        }
                        else if (Entry.Status == (byte)VoucherStatus.Disabled || Entry.Status == (byte)VoucherStatus.DisabledPrivate)
                        {
                            if (Entry.StartingAt.GetValueOrDefault() <= DateTime.UtcNow && DateTime.UtcNow <= Entry.EndingAt.GetValueOrDefault())
                            {
                                <span class="badge badge-warning">Đã tạm dừng</span>
                            }
                            else
                            {
                                <span class="badge badge-danger">Đã kết thúc</span>
                            }
                        }
                        else
                        {
                            <p>N/A</p>
                        }
                    </td>
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle custom-dropdown-btn" type="button" data-toggle="dropdown" aria-expanded="false">
                                <i class="fa-solid fa-pen-to-square"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-right rounded-3 border-1 text-center m-2">
                                <a class="btn btn-warning w-75" asp-action="Edit" asp-route-ID="@(@Entry.VoucherID)">Sửa</a><br />
                                <a class="btn btn-secondary w-75 mt-1" asp-action="Details" asp-route-ID="@Entry.VoucherID">Chi tiết</a><br />
                                @if (Entry.StartingAt.GetValueOrDefault() <= DateTime.UtcNow && DateTime.UtcNow <= Entry.EndingAt.GetValueOrDefault())
                                {
                                    @if (Entry.Status == 1 || Entry.Status == 101)
                                    {
                                        <a asp-action="ToggleStatus" asp-route-ID="@(Entry.VoucherID)" class="btn btn-danger w-75 mt-1">Tạm dừng</a>
                                        <br />
                                    }
                                    else
                                    {
                                        <a asp-action="ToggleStatus" asp-route-ID="@(Entry.VoucherID)" class="btn btn-info w-75 mt-1">Tiếp tục</a>
                                        <br />
                                    }
                                    <a asp-action="StopThisRightNow" asp-route-ID="@(Entry.VoucherID)" class="btn btn-warning w-75 mt-1">Kết thúc</a>
                                }
                                @if (DateTime.UtcNow <= Entry.StartingAt.GetValueOrDefault())
                                {
                                    <button type="button" class="btn btn-danger delete_trigger mt-1 w-75" data-id="@Entry.VoucherID" data-controller="Voucher" data-action="Delete" data-toggle="modal" data-target="#ModalDelete">Xóa</button>
                                }
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    @if (SortByTime != null || SortByLook != null)
    {
        <h1 class="text-center">Không tìm thấy Voucher nào.</h1>
    }
    else
    {
        <h1 class="text-center">Chưa có Voucher nào.</h1>
        <p class="text-center">Bắt đầu tạo Voucher bằng cách nhấn vào "<b>Tạo mới</b>"!</p>
    }
}

<!-- Modal -->
<div class="modal fade" id="ModalDelete" tabindex="-1" role="dialog" aria-labelledby="DeleteLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="DeleteLabel">KHOAN!!! <span style="font-size:x-small">(Khoan?)</span></h1>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn để xóa Voucher này?<br />
                <span style="font-size:small" class="font-monospace-cascadia">ID Voucher: <span id="ItemID" class="font-monospace-cascadia"></span></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" id="cancel-btn">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirm_deletion">Xóa</button>
            </div>
        </div>
    </div>
</div>

<script>
    /*
     *  thanks for the free javascript search snippet 2
     *  __  __   ____     ____   _   __   __ __    __      22222
     *  \ \/ /  / __ \   /  _/  / | / /  / //_/   / /     22   22
     *   \  /  / / / /   / /   /  |/ /  / ,<     / /         22
     *   / /  / /_/ /  _/ /   / /|  /  / /| |   /_/       22
     *  /_/   \____/  /___/  /_/ |_/  /_/ |_|  (_)       22222222
     *
     */


    function SearchVouchers() {
        var input = document.getElementById('SearchInput');
        var filter = input.value.toLowerCase();
        var table = document.getElementById('VouchersTableBody');
        var rows = table.getElementsByTagName('tr');

        for (var i = 0; i < rows.length; i++) {
            var cells = rows[i].getElementsByTagName('td');
            var orderName = cells[0].textContent || cells[0].innerText; // Cột mã đơn là cột 1 (index 0)

            // Kiểm tra xem tên sản phẩm có chứa từ khóa tìm kiếm hay không
            if (orderName.toLowerCase().indexOf(filter) > -1) {
                rows[i].style.display = ""; // Hiển thị nếu khớp
            } else {
                rows[i].style.display = "none"; // Ẩn nếu không khớp
            }
        }
    }
</script>